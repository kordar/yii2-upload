<?php
namespace kordar\upload\widget;

use yii\helpers\Html;
use yii\helpers\Url;
use yii\widgets\InputWidget;

class SingleUpload extends InputWidget
{
    public $model = null;
    public $attribute = '';
    public $url = '';

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        echo Html::fileInput('SingleUploadForm[file]', $this->value, ['id' => $this->options['id']]);
    }

    public function run()
    {
        $this->generateInput($this->options['id']);
    }

    protected function generateInput($id)
    {
        $url = $this->url ? : Url::to(['upload']);
        $label = [
            'warning' => \Yii::t('ace.upload','Warning'),
            'no_file' => \Yii::t('ace.upload','No File ...'),
            'btn_choose' => \Yii::t('ace.upload','Choose'),
            'btn_change' => \Yii::t('ace.upload','Change'),
            'browser_does_not_support' => \Yii::t('ace.upload', 'Browser does not support'),
        ];

        $js = <<<JS
        \$('#{$id}').ace_file_input({
            no_file:"{$label['no_file']}",
            btn_choose:"{$label['btn_choose']}",
            btn_change:"{$label['btn_change']}",
            droppable:false,
            thumbnail:false //| true | large
            //whitelist:'gif|png|jpg|jpeg'
            //blacklist:'exe|php'
        }).on('change', function() {
          
           // 检查是否支持FormData
        　　if(window.FormData) {
           
        　　　　var formData = new FormData();
        　　　　// 建立一个upload表单项，值为上传的文件
        　　　　formData.append('SingleUploadForm[file]', document.getElementById('{$id}').files[0]);
        　　　　var xhr = new XMLHttpRequest();
        　　　　xhr.open('POST', '{$url}');
        　　　　// 定义上传完成后的回调函数
        　　　　xhr.onload = function () {
        　　　　　　if (xhr.status === 200) {
                    var json = $.parseJSON(xhr.responseText);
                    if (json.status === 'success') {
                        alert(json.path);
                    } 
        　　　　　　} 
                  bootboxWarning(json.msg, "{$label['warning']}");
        　　　　};
        　　　　xhr.send(formData);
        　　} else {
               bootboxWarning("{$label['browser_does_not_support']}", "{$label['warning']}");
            }
        });
JS;
        $this->view->registerJs($js);
    }

}