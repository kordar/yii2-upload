<?php
namespace kordar\upload\widget;

use yii\helpers\Html;
use yii\helpers\Url;
use yii\widgets\InputWidget;

class SingleUpload extends InputWidget
{
    public $model = null;
    public $attribute = '';
    public $url = '';
    public $type = 'input';

    public $title = 'Title';

    public function init()
    {
        parent::init(); // TODO: Change the autoGenerated stub
        $attribue = $this->attribute;
        $this->value = $this->model->$attribue;
        echo Html::activeHiddenInput($this->model, $this->attribute, ['id' => $this->options['id'] . '-hidden']);
        echo Html::fileInput('SingleUploadForm[file]', '', ['id' => $this->options['id']]);

        /*echo Html::button(Html::tag('i', '', ['class'=>'ace-icon fa fa-eye']) . ' ' . \Yii::t('ace.upload', 'View'), ['class'=>'btn btn-xs btn-success upload-btn-view']) . ' ';
        echo $this->view->registerJs($this->viewJs());
        echo Html::a(Html::tag('i', '', ['class'=>'ace-icon fa fa-download']) . ' ' . \Yii::t('ace.upload', 'Download'), ['default/download-file'], ['class'=>'btn btn-xs btn-danger upload-btn-download']) . ' ';
        echo $this->view->registerJs($this->downloadJs());*/
    }

    protected function viewJs()
    {
        $title = \Yii::t('ace.upload', 'View');
        return '$(".upload-btn-view").click(function(){var src = $(this).siblings(":input[type=hidden]").val(); bootboxImageView(src, "' . $title . '")})';
    }

    protected function downloadJs()
    {
        return '$(".upload-btn-download").click(function(){var filename = $(this).siblings(":input[type=hidden]").val(); var src=$(this).attr("href"); $(this).attr("href", src + "?filename=" + filename)})';
    }

    public function run()
    {
        $url = $this->url ? : Url::to(['upload']);
        switch ($this->type) {
            case 'input':
                $this->generateInput($this->options['id'], $url);
                break;
            case 'well':
                $this->generateWell($this->options['id'], $url);
                break;
        }
    }

    protected function generateInput($id, $url)
    {
        $label = [
            'warning' => \Yii::t('ace.upload','Warning'),
            'no_file' => \Yii::t('ace.upload','No File ...'),
            'btn_choose' => \Yii::t('ace.upload','Choose'),
            'btn_change' => \Yii::t('ace.upload','Change'),
            'browser_does_not_support' => \Yii::t('ace.upload', 'Browser Does Not Support'),
        ];

        $callbackJs = str_replace(['{id}', '{hiddenId}', '{url}', '{label-warning}', '{label-browser-does-not-support}'], [
            $id, $id . '-hidden', $url, $label['warning'], $label['browser_does_not_support']
        ], $this->callbackJs());

        $js = str_replace(['{id}', '{label-no-file}', '{label-btn-choose}', '{label-btn-change}', '{hiddenId}', '{callbackJs()}'], [
            $id, $label['no_file'], $label['btn_choose'], $label['btn_change'], $id . '-hidden', $callbackJs
        ], $this->getInput());

        $this->view->registerJs($js);
        $this->view->registerJs($this->generateShowInput($id));
    }

    protected function generateShowInput($id)
    {
        return empty($this->value)?'':"\$('#{$id}').ace_file_input('show_file_list', ['{$this->value}'])";
    }

    protected function generateWell($id, $url)
    {
        $label = [
            'warning' => \Yii::t('ace.upload','Warning'),
            'browser_does_not_support' => \Yii::t('ace.upload', 'Browser does not support'),
            'btn_choose' => \Yii::t('ace.upload', 'Drop files here or click to choose'),
        ];

        $callbackJs = str_replace(['{id}', '{hiddenId}', '{url}', '{label-warning}', '{label-browser-does-not-support}'], [
            $id, $id . '-hidden', $url, $label['warning'], $label['browser_does_not_support']
        ], $this->callbackJs());

        $js = str_replace(['{id}', '{label-btn-choose}', '{thumbnail}', '{hiddenId}', '{callbackJs()}'], [
            $id, $label['btn_choose'], 'small', $id . '-hidden', $callbackJs
        ], $this->getWell());

        $showJs = str_replace(['{id}', '{name}', '{path}'], [$id, $this->title, $this->value], $this->getShowWell());
        $this->view->registerJs($js);
        $this->view->registerJs($showJs);
    }

    protected function getShowWell()
    {
        return empty($this->value)?'':'$("#{id}").ace_file_input("show_file_list",[{type:"image",name:"{name}",path:"{path}"}]);';
    }

    /**
     *
     * $('#{id}').ace_file_input({
    style: 'well',
    btn_choose: '{label-btn-choose}',
    btn_change: null,
    no_icon: 'ace-icon fa fa-cloud-upload',
    droppable: true,
    thumbnail: '{thumbnail}'//large | fit
    //,icon_remove:null//set null, to hide remove/reset button
    //,before_change:function(files, dropped) {
    //Check an example below
    //or examples/file-upload.html
    //return true;
    //}
    ,before_remove : function() {
        $("#{hiddenId}").val("");
        return true;
    }
    ,
    preview_error : function(filename, error_code) {
    //name of the file that failed
    //error_code values
    //1 = 'FILE_LOAD_FAILED',
    //2 = 'IMAGE_LOAD_FAILED',
    //3 = 'THUMBNAIL_FAILED'
    //alert(error_code);
    }

    }).on('change', function(){
    {callbackJs()}
    });


    //$('#id-input-file-3')
    //.ace_file_input('show_file_list', [
    //{type: 'image', name: 'name of image', path: 'http://path/to/image/for/preview'},
    //{type: 'file', name: 'hello.txt'}
    //]);
     *
     *
     */
    protected function getWell()
    {
        return '$("#{id}").ace_file_input({style:"well",btn_choose:"{label-btn-choose}",btn_change:null,no_icon:"ace-icon fa fa-cloud-upload",droppable:true,thumbnail:"{thumbnail}",before_remove:function(){$("#{hiddenId}").val("");return true},preview_error:function(filename,error_code){}}).on("change",function(){{callbackJs()}});';
    }


    /**
     *
     * $('#{id}').ace_file_input({
    no_file:"{label-no-file}",
    btn_choose:"{label-btn-choose}",
    btn_change:"{label-btn-change}",
    droppable:false,
    thumbnail:false, //| true | large
    before_remove : function() {
        $("#{hiddenId}").val("");
        return true;
    }
    //whitelist:'gif|png|jpg|jpeg'
    //blacklist:'exe|php'
    }).on('change', function() {{callbackJs()}});
     *
     */
    protected function getInput()
    {
        return '$("#{id}").ace_file_input({no_file:"{label-no-file}",btn_choose:"{label-btn-choose}",btn_change:"{label-btn-change}",droppable:false,thumbnail:false,before_remove:function(){$("#{hiddenId}").val("");return true}}).on("change",function(){{callbackJs()}});';
    }


    /**
     *
     * if(window.FormData) {
    　　　　var formData = new FormData();
    　　　　formData.append('SingleUploadForm[file]', document.getElementById('{id}').files[0]);
    　　　　formData.append('filename', document.getElementById('{hiddenId}').value);
    　　　　var xhr = new XMLHttpRequest();
    　　　　xhr.open('POST', '{url}');
    　　　　xhr.onload = function () {
    　　　　　　if (xhr.status === 200) {
                var json = $.parseJSON(xhr.responseText);
                if (json.status === 'success') {
                var path = json.path;
                $('#{hiddenId}').val(path);
                return;
             }
    　　　}
    bootboxWarning(json.msg, "{label-warning}");
    　　　　};
    　　　　xhr.send(formData);
    　　} else {
    bootboxWarning("{label-browser-does-not-support}", "{label-warning}");
    }
     *
     */
    protected function callbackJs()
    {
        return 'if(window.FormData){var formData=new FormData();formData.append("SingleUploadForm[file]",document.getElementById("{id}").files[0]);formData.append("filename",document.getElementById("{hiddenId}").value);var xhr=new XMLHttpRequest();xhr.open("POST","{url}");xhr.onload=function(){if(xhr.status===200){var json=$.parseJSON(xhr.responseText);if(json.status==="success"){var path=json.path;$("#{hiddenId}").val(path);return}}bootboxWarning(json.msg,"{label-warning}")};xhr.send(formData)}else{bootboxWarning("{label-browser-does-not-support}","{label-warning}")};';
    }


}